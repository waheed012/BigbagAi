{"ast":null,"code":"import axios from 'axios';\nimport { LoginActionTypes, CLLER_ERRORS, RegisterActionTypes } from '../Types/ActionTypes';\n\n// ........................................................loginaction\n\nexport const loginAction = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LoginActionTypes.LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LoginActionTypes.LOGIN_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LoginActionTypes.LOGIN_FALL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// ?????????????????????????????????RegisterAction\n\nexport const RegisterAction = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: RegisterActionTypes.REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/register', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: RegisterActionTypes.REGISTER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: RegisterActionTypes.REGISTER_FALL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const clearError = () => async dispatch => {\n  dispatch({\n    type: CLLER_ERRORS\n  });\n};","map":{"version":3,"names":["axios","LoginActionTypes","CLLER_ERRORS","RegisterActionTypes","loginAction","email","password","dispatch","type","LOGIN_REQUEST","config","headers","data","post","LOGIN_SUCCESS","payload","user","error","LOGIN_FALL","response","message","RegisterAction","name","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FALL","clearError"],"sources":["/home/waheed/Desktop/React_Project/bigbagai/src/Store/Actions/UserAction.js"],"sourcesContent":["import axios from 'axios';\nimport {\n  LoginActionTypes,\n  CLLER_ERRORS,\n  RegisterActionTypes,\n} from '../Types/ActionTypes';\n\n// ........................................................loginaction\n\nexport const loginAction = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: LoginActionTypes.LOGIN_REQUEST,\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const { data } = await axios.post(\n      '/login',\n      {\n        email,\n        password,\n      },\n      config\n    );\n    dispatch({\n      type: LoginActionTypes.LOGIN_SUCCESS,\n      payload: data.user,\n    });\n  } catch (error) {\n    dispatch({\n      type: LoginActionTypes.LOGIN_FALL,\n     \n      payload: error.response.data.message,\n    });\n  }\n};\n\n// ?????????????????????????????????RegisterAction\n\nexport const RegisterAction = (\n\n  name,\n\n  email,\n\n  password\n\n) =>\n\n  async (dispatch) => {\n    try {\n      dispatch({\n        type: RegisterActionTypes.REGISTER_REQUEST,\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      const { data } = await axios.post(\n        '/register',\n        {\n          name,\n          email,\n          password,\n        },\n        config\n      );\n      dispatch({\n        type: RegisterActionTypes.REGISTER_SUCCESS,\n        payload: data.user,\n      });\n    } catch (error) {\n      dispatch({\n        type: RegisterActionTypes.REGISTER_FALL,\n       \n        payload: error.response.data.message,\n      });\n    }\n  };\n\n  export const clearError = () => async (dispatch) => {\n    dispatch({ type: CLLER_ERRORS });\n  };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,gBAAgB,EAChBC,YAAY,EACZC,mBAAmB,QACd,sBAAsB;;AAE7B;;AAEA,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAClE,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAEP,gBAAgB,CAACQ;IACzB,CAAC,CAAC;IACF,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAC/B,QAAQ,EACR;MACER,KAAK;MACLC;IACF,CAAC,EACDI,MACF,CAAC;IACDH,QAAQ,CAAC;MACPC,IAAI,EAAEP,gBAAgB,CAACa,aAAa;MACpCC,OAAO,EAAEH,IAAI,CAACI;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,QAAQ,CAAC;MACPC,IAAI,EAAEP,gBAAgB,CAACiB,UAAU;MAEjCH,OAAO,EAAEE,KAAK,CAACE,QAAQ,CAACP,IAAI,CAACQ;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;;AAEA,OAAO,MAAMC,cAAc,GAAGA,CAE5BC,IAAI,EAEJjB,KAAK,EAELC,QAAQ,KAIR,MAAOC,QAAQ,IAAK;EAClB,IAAI;IACFA,QAAQ,CAAC;MACPC,IAAI,EAAEL,mBAAmB,CAACoB;IAC5B,CAAC,CAAC;IACF,MAAMb,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAC/B,WAAW,EACX;MACES,IAAI;MACJjB,KAAK;MACLC;IACF,CAAC,EACDI,MACF,CAAC;IACDH,QAAQ,CAAC;MACPC,IAAI,EAAEL,mBAAmB,CAACqB,gBAAgB;MAC1CT,OAAO,EAAEH,IAAI,CAACI;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdV,QAAQ,CAAC;MACPC,IAAI,EAAEL,mBAAmB,CAACsB,aAAa;MAEvCV,OAAO,EAAEE,KAAK,CAACE,QAAQ,CAACP,IAAI,CAACQ;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMM,UAAU,GAAGA,CAAA,KAAM,MAAOnB,QAAQ,IAAK;EAClDA,QAAQ,CAAC;IAAEC,IAAI,EAAEN;EAAa,CAAC,CAAC;AAClC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}